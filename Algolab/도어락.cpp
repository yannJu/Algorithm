/*
실전프로젝트-도어락
최근 도어락의 지문으로 비밀번호를 유추하는 문제를 해결하기 위해 비밀번호 앞 또는 뒤에 허수를 입력하는 허수 기능이 추가됐다. 
그러나 기존 허수 기능은 ‘허수 + 비밀번호’ 또는 ‘비밀번호 + 허수’만 가능하기 때문에 카메라로 비밀번호 입력 상황을 촬영한다면 쉽게 유추할 수 있다. 
그래서 K 회사는 이러한 단점을 보완하는 새로운 허수 기능을 개발하려 한다. 새로운 허수 기능은 기존 비밀번호 앞 / 뒤 모두 허수를 넣을 수 있게 만들려고 한다. 
예를 들어 비밀번호가 ‘551063’ 인 경우, ‘1347551063120’ 이나 ‘385510633247’ 과 같이 비밀번호 앞뒤 모두 허수를 입력해도 허수 사이 정확한 비밀번호가 입력됐다면 문이 열릴 것이다. 
그렇다면, 입력으로 실제 비밀번호와 입력된 번호가 주어질 때, 입력된 번호 안에 비밀번호가 있는 경우 ‘1’을 없는 경우 0을 출력하는 프로그램을 작성하시오. 
입력
입력은 표준입력(standard input)을 사용한다. 첫 번째 줄에는 테스트 케이스 개수를 나타내는 t (2 ≤ t ≤20)가 입력된다. 
두 번째 줄부터는 각 테스트 케이스에 대한 입력이 주어진다. 
각 테스트 케이스의 첫 번째 줄에는 실제 비밀번호의 크기와 입력된 번호 크기를 나타내는 자연수 n, m (5 ≤ n, m ≤ 500) 이 주어진다. 
두 번째 줄부터는 2개 줄에 실제 비밀번호와 입력된 번호가 순서대로 입력된다. 
출력
출력은 표준출력(standard output)을 사용한다. 입력 테스트 케이스의 순서대로 결과를 출력한다. 
각 테스트 케이스에 대해 비밀번호가 포함돼 있으면 1을, 없으면 0을 출력한다. 
입출력 예
입력 출력
4
6 13
551063
1347551063120
6 6
551063
551063
6 3
551063
551
6 12
551055
865510551055
1
1
0
1
*/

#include <iostream>
#include <string>
using namespace std;

int main() {
    int testC;

    cin >> testC;
    while(testC--) {
        int result = 0, n, m, j, i = 0;
        string pwd, tmpPwd;

        cin >> n >> m >> pwd >> tmpPwd;

        for (i; i < m; i++) {
            if (i + n <= m) {
                for (j = 0; j < n; j++) {
                    if (pwd[j] != tmpPwd[i + j]) break;
                }
                if (j == n) {
                    result = 1;
                    break;
                }
            }
        }
        cout << result << endl;
    }
}